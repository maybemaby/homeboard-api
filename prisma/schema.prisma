// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Home {
  id        String     @id @unique @default(cuid())
  name      String
  address   String?
  createdAt DateTime   @default(now())
  roommates Roommate[]
  messages  Message[]
  events    Event[]
}

model Roommate {
  id           String             @id @unique @default(cuid())
  role         String
  home         Home               @relation(fields: [homeId], references: [id])
  homeId       String
  user         User?              @relation(fields: [userId], references: [id])
  userId       String
  sentMessages Message[]
  events       Event[]
  Tasks        TasksOnRoommates[]
}

model User {
  id         String     @id @unique @default(cuid())
  username   String     @unique
  password   String
  email      String?    @unique
  firstName  String
  lastName   String
  signUpDate DateTime   @default(now())
  lastLogin  DateTime?
  profiles   Roommate[]
}

model Message {
  id         String   @id @unique @default(cuid())
  content    String
  sentAt     DateTime @default(now())
  sender     Roommate @relation(fields: [senderId], references: [id])
  senderId   String
  receiverId String?
  Home       Home     @relation(fields: [homeId], references: [id])
  homeId     String
}

model Event {
  id          String    @id @unique @default(cuid())
  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  beginsAt    DateTime
  endsAt      DateTime?
  home        Home      @relation(fields: [homeId], references: [id])
  homeId      String
  createdBy   Roommate  @relation(fields: [createdById], references: [id])
  createdById String
}

model Task {
  id          String             @id @unique @default(cuid())
  description String?
  createdAt   DateTime           @default(now())
  beginsAt    DateTime
  frequency   String
  complete    Boolean            @default(false)
  completedBy String?
  assignees   TasksOnRoommates[]
}

model TasksOnRoommates {
  task       Task     @relation(fields: [taskId], references: [id])
  taskId     String
  roommate   Roommate @relation(fields: [roommateId], references: [id])
  roommateId String
  assignedAt DateTime @default(now())

  @@id([taskId, roommateId])
}
